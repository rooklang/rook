#!/usr/bin/perl
use strict;
use warnings;
use File::Temp qw/tempfile/;

my $rc = 0;
my ($tmp_fh, $tmp_file) = tempfile;

sub test {
  my ($f, $cmd, @src) = @_;
  @src == 3 or die "$f: malformed test case file\n";
  my ($test, $src, $want) = @src;
  chomp($test);

  open my $pipe, "|-", "$cmd >$tmp_file"
    or die "$f: failed to exec `$cmd': $!\n";
  print $pipe $src;
  close $pipe
    or die "$f: `$cmd': failed: $!\n";

  seek $tmp_fh, 0, 0;
  my $got = do { local $/; <$tmp_fh>; };

  if ($got eq $want) {
    print "[OK] $test\n";

  } else {
    print "[!!] $test\n";

    open $pipe, "|-", "diff -y - $tmp_file >&2"
      or die "$f: unable to generate diff: $!\n";
    print $pipe "$want";
    close $pipe;
    $rc = 1;
  }

}

for my $f (@ARGV) {
  my ($i, @src) = (0);

  open my $fh, "<", $f
    or die "unable to open $f: $!\n";
  chomp(my $shebang = <$fh>);
  my ($cmd) = ($shebang =~ m/^::+\s+(.*)\s+::+$/);

  print "# $cmd\n";
  while (<$fh>) {
    if (m/^---+/) { $i++; next; }
    if (m/^===+/) {
      test($f, $cmd, @src);
      @src = (); $i = 0;
      next;
    }
    $src[$i] .= $_;
  }
  test($f, $cmd, @src) if $i;
  close $fh;
  print "\n";
}

if ($rc == 0) {
  print "ALL TESTS PASSED\n";
  exit 0;
}
print "\nSOME TESTS FAILED!!\n";
exit $rc;
